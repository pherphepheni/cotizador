{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","helper.js","componentes/Resumen.js","componentes/Resultado.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","markRef","React","createRef","yearRef","basicPlanRef","fullPlanRef","insurer","e","preventDefault","selectPlan","_this","current","checked","infoCar","mark","value","year","plan","onSubmit","this","name","ref","type","Component","primeraMayuscula","texto","charAt","toUpperCase","slice","Resumen","seeResumen","_this$props$info","info","Resultado","result","mesagge","react_transition_group","component","classNames","key","timeout","enter","exit","App","state","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","incrementPlan","obtenerPlan","parseFloat","toFixed","setState","componentes_Header","componentes_Formulario","componentes_Resumen","componentes_Resultado","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOAceA,EAZA,SAAAC,GACP,OAEIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OACdH,EAAAC,EAAAC,cAAA,UACKH,EAAMK,UC0DZC,6MA5DXC,QAAQC,IAAMC,cACdC,QAAQF,IAAMC,cACdE,aAAaH,IAAMC,cACnBG,YAAYJ,IAAMC,cAElBI,QAAS,SAACC,GACNA,EAAEC,iBAEF,IAAMC,EAAaC,EAAKN,aAAaO,QAAQC,QAAU,SAAW,WAE5DC,EAAQ,CACVC,KAAMJ,EAAKV,QAAQW,QAAQI,MAC3BC,KAAMN,EAAKP,QAAQQ,QAAQI,MAC3BE,KAAOR,GAEXC,EAAKjB,MAAMa,QAAQO,4EAMnB,OACInB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeqB,SAAUC,KAAKb,SAC1CZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,QAAQC,IAAKF,KAAKnB,SAC3BN,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,aAAd,aACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,WAAd,WACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,YAAd,cAIRrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,OAAOC,IAAKF,KAAKhB,SAC1BT,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,UAGRrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAO0B,KAAK,QAASD,IAAKF,KAAKf,aAAcgB,KAAK,OAAOL,MAAM,WAFnE,aAGIrB,EAAAC,EAAAC,cAAA,SAAO0B,KAAK,QAAQD,IAAKF,KAAKd,YAAae,KAAK,OAAOL,MAAM,aAHjE,aAMArB,EAAAC,EAAAC,cAAA,UAAQ0B,KAAK,SAASzB,UAAU,SAAhC,mBA1DS0B,aCwBjB,SAASC,EAAiBC,GAC7B,OAAOA,EAAMC,OAAO,GAAGC,cAAgBF,EAAMG,MAAM,OCAzCC,6MAvBXC,WAAY,WAAK,IAAAC,EACQrB,EAAKjB,MAAMuC,KAA7BlB,EADUiB,EACVjB,KAAKE,EADKe,EACLf,KAAKC,EADAc,EACAd,KAEb,OAAIH,GAASE,GAASC,EAEtBvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,oBAAY4B,EAAiBV,IAC7BpB,EAAAC,EAAAC,cAAA,mBAAW4B,EAAkBP,IAC7BvB,EAAAC,EAAAC,cAAA,qBAAU4B,EAAkBR,KANO,8EAYnC,OACItB,EAAAC,EAAAC,cAAA,WACKuB,KAAKW,qBAlBAP,oBCqBPU,mLAnBP,IAAMC,EAASf,KAAK1B,MAAMyC,OACpBC,EAAWD,EAAiD,iBAAvC,wCAE3B,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZsC,EACDzC,EAAAC,EAAAC,cAACwC,EAAA,gBAAD,CAAiBC,UAAW,OAAOxC,UAAU,aAC7CH,EAAAC,EAAAC,cAACwC,EAAA,cAAD,CAAeE,WAAW,YAAYC,IAAKL,EAAQM,QAAU,CAACC,MAAO,IAAKC,KAAM,MAChFhD,EAAAC,EAAAC,cAAA,YAAOsC,aAXKX,aC0DToB,6MApDbC,MAAQ,CACNV,OAAO,GACPF,KAAK,MAGP1B,QAAU,SAAC0B,GAAQ,IACVlB,EAAgBkB,EAAhBlB,KAAKG,EAAWe,EAAXf,KAAKD,EAAMgB,EAANhB,KAEXkB,EAAS,IAEbA,GAA2B,EHlB1B,SAA+BlB,GAClC,OAAO,IAAI6B,MAAOC,cAAgB9B,EGgBV+B,CAAsB/B,GACZkB,EAAU,IAC1CA,EHfE,SAAwBc,GAC3B,IAAIC,EAEJ,OAAQD,GACJ,IAAK,UACDC,EAAa,IACb,MACJ,IAAK,YACDA,EAAa,KACb,MACJ,IAAK,WACDA,EAAa,KAMrB,OAAOA,EGFGC,CAAcpC,GAAQoB,EAC/B,IAAIiB,EHGF,SAAsBlC,GACzB,MAAiB,WAATA,EAAqB,IAAO,IGJfmC,CAAYnC,GAChCiB,EAASmB,WAAWF,EAAcjB,GAAQoB,QAAQ,GAElD,IAAMzC,EAAS,CACbC,KAAOA,EACPG,KAAOA,EACPD,KAAOA,GAGLN,EAAK6C,SAAS,CACZrB,OAAOA,EACPF,KAAKnB,6EAIb,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC4D,EAAD,CACE1D,OAAS,uBAGbJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAC6D,EAAD,CACEnD,QAAUa,KAAKb,UAEjBZ,EAAAC,EAAAC,cAAC8D,EAAD,CACE1B,KAAMb,KAAKyB,MAAMZ,OAEnBtC,EAAAC,EAAAC,cAAC+D,EAAD,CACCzB,OAAQf,KAAKyB,MAAMV,kBA3CZX,aCMEqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxE,EAAAC,EAAAC,cAACuE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ac51cdb1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nconst Header = props =>{\r\n        return(\r\n\r\n            <header className=\"top\">\r\n                <h1>\r\n                    {props.titulo}\r\n                </h1>\r\n            </header>\r\n        )\r\n\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass Formulario extends Component {\r\n    \r\n    \r\n    markRef=React.createRef();\r\n    yearRef=React.createRef();\r\n    basicPlanRef=React.createRef();\r\n    fullPlanRef=React.createRef();\r\n\r\n    insurer =(e) => {\r\n        e.preventDefault();\r\n\r\n        const selectPlan = this.basicPlanRef.current.checked ? 'basico' : 'completo';\r\n\r\n        const infoCar={\r\n            mark: this.markRef.current.value,\r\n            year: this.yearRef.current.value,\r\n            plan : selectPlan\r\n        }\r\n        this.props.insurer(infoCar);\r\n    }\r\n    \r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <form className=\"cotizar-auto\" onSubmit={this.insurer}>\r\n                <div className=\"campo\">\r\n                    <label>Marca</label>\r\n                    <select name=\"marca\" ref={this.markRef} >\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asiatico</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>A침o</label>\r\n                    <select name=\"year\" ref={this.yearRef}>\r\n                        <option value=\"2019\">2019</option>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                        <option value=\"2011\">2011</option>\r\n                        <option value=\"2010\">2010</option>\r\n                        <option value=\"2009\">2009</option>\r\n                        <option value=\"2008\">2008</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"campo\">\r\n                    <label>Plan:</label>\r\n                    <input type=\"radio\"  ref={this.basicPlanRef} name=\"plan\" value=\"basico\"/> B치sico\r\n                    <input type=\"radio\" ref={this.fullPlanRef} name=\"plan\" value=\"completo\"/> Completo\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default Formulario;","export function obtenerDiferenciaAnio(year) {\r\n    return new Date().getFullYear() - year;\r\n }\r\n \r\n export function calcularMarca( modelo ) {\r\n     let incremento;\r\n \r\n     switch (modelo) {\r\n         case 'europeo':\r\n             incremento = 1.30;\r\n             break;\r\n         case 'americano':\r\n             incremento = 1.15;\r\n             break;\r\n         case 'asiatico':\r\n             incremento = 1.05;\r\n             break;\r\n         default:\r\n             break;\r\n     }\r\n \r\n     return incremento;\r\n }\r\n export function obtenerPlan( plan ) {\r\n     return (plan === 'basico') ? 1.20 : 1.50;\r\n }\r\n export function primeraMayuscula(texto) {\r\n     return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n }","import React,{Component} from 'react';\r\nimport {primeraMayuscula} from '../helper';\r\n\r\nclass Resumen extends Component{\r\n    seeResumen= () =>{\r\n    const {mark,year,plan} = this.props.info;\r\n\r\n        if(!mark || !year || !plan) return null;\r\n        return (            \r\n        <div className=\"resumen\">\r\n        <h2>Resumen de cotizacion</h2>\r\n        <li>Marca: {primeraMayuscula(mark)}</li>\r\n        <li>Plan: {primeraMayuscula (plan)}</li>\r\n        <li>A침o: {primeraMayuscula (year)}</li>\r\n        </div>\r\n        )\r\n    }\r\n    render(){\r\n           \r\n        return(\r\n            <div>\r\n                {this.seeResumen()}\r\n             \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Resumen;","import React, {Component} from 'react';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\r\nclass Resultado extends Component {\r\n\r\n    render(){\r\n        const result = this.props.result;\r\n        const mesagge =(!result) ? 'Elije marca, a침o, y tipo de seguro' : 'El total es: $';\r\n\r\n        return(\r\n          <div className=\"gran-total\">\r\n            {mesagge}\r\n            <TransitionGroup component =\"span\" className=\"resultado\">\r\n            <CSSTransition classNames=\"resultado\" key={result} timeout ={{enter :500, exit: 500}}>\r\n            <span>{result}</span>\r\n\r\n            </CSSTransition>\r\n\r\n\r\n            </TransitionGroup>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultado;","import React,{Component} from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan} from '../helper';\nimport Resultado from './Resultado';\nclass App extends Component{\n  \n  state = {\n    result:'',\n    info:{}\n  }\n\n  insurer = (info) =>{\n    const {mark,plan,year}=info;\n\n      let result = 2000;\n      const yearDiference = obtenerDiferenciaAnio(year);\n      result -= ((yearDiference *3) * result) / 100;\n      result = calcularMarca(mark) * result;\n      let incrementPlan = obtenerPlan(plan);\n      result = parseFloat(incrementPlan*result).toFixed(2);\n\n      const infoCar ={\n        mark : mark,\n        plan : plan,\n        year : year\n      }\n\n          this.setState({\n            result:result,\n            info:infoCar\n          })\n  }\n  render(){\n    return(\n      <div className=\"contenedor\">\n        <Header\n          titulo = 'Cotizador de autos'\n        />\n\n      <div className=\"contenedor-formulario\">\n          <Formulario\n            insurer ={this.insurer}\n          />\n          <Resumen \n            info={this.state.info}\n          />\n          <Resultado \n           result={this.state.result}\n           />\n         \n      </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}